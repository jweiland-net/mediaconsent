<<<<<<< HEAD
{"version":3,"file":"MediaConsent.js","sources":["../../Private/Build/MediaConsentPlugin/src/ts/mediaConsent.ts"],"sourcesContent":["// media-consent module\nexport class MediaConsent {\n  private readonly wrapper: HTMLElement | null;\n  private readonly uri: string | null; // Declare the uri property with the correct type\n  private readonly type: string | null; // Declare the uri property with the correct type\n\n  constructor (element: Element) {\n    this.wrapper = element.closest('.mediaconsent_wrapper') as HTMLElement | null;\n    if (!this.wrapper) {\n      throw new Error('Parent wrapper with class \"mediaconsent-wrapper\" not found.');\n    } else {\n      // @ts-ignore\n      this.uri = this.wrapper.dataset.mcuri;\n      // @ts-ignore\n      this.type = this.wrapper.dataset.mctype;\n    }\n    this.wrapper.addEventListener('click', this.clickHandler.bind(this));\n  }\n\n  clickHandler = () => {\n    if (!this.uri) {\n      console.error('Error: data-mcuri attribute not found in parent wrapper.');\n      return;\n    }\n    if (!this.type) {\n      console.warn('Warning: \"type\" parameter not found in data-mcuri attribute.');\n      return;\n    }\n    this.reloadItem();\n  };\n\n  reloadItem() {\n    // @ts-ignore\n    fetch(this.uri)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('MediaConsent: Failed to load consent content');\n        }\n        return response.text();\n      })\n      .then(text => {\n        // @ts-ignore\n        this.wrapper.innerHTML = text;\n      })\n      .catch(error => {\n        console.error('There is a problem with the fetch operation: ', error);\n      });\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const mediaCheckBoxs = document.querySelectorAll('.mcb');\n  mediaCheckBoxs.forEach(mediaCheckBox => {\n    new MediaConsent(mediaCheckBox);\n  });\n});\n"],"names":["MediaConsent","element","__publicField","response","text","error","mediaCheckBox"],"mappings":"wKACO,MAAMA,CAAa,CAKxB,YAAaC,EAAkB,CAJdC,EAAA,gBACAA,EAAA,YACAA,EAAA,aAejBA,EAAA,oBAAe,IAAM,CACf,GAAA,CAAC,KAAK,IAAK,CACb,QAAQ,MAAM,0DAA0D,EACxE,MACF,CACI,GAAA,CAAC,KAAK,KAAM,CACd,QAAQ,KAAK,8DAA8D,EAC3E,MACF,CACA,KAAK,WAAW,CAAA,GApBZ,GADC,KAAA,QAAUD,EAAQ,QAAQ,uBAAuB,EACjD,KAAK,QAIH,KAAA,IAAM,KAAK,QAAQ,QAAQ,MAE3B,KAAA,KAAO,KAAK,QAAQ,QAAQ,WAL3B,OAAA,IAAI,MAAM,6DAA6D,EAO/E,KAAK,QAAQ,iBAAiB,QAAS,KAAK,aAAa,KAAK,IAAI,CAAC,CACrE,CAcA,YAAa,CAEX,MAAM,KAAK,GAAG,EACX,KAAiBE,GAAA,CACZ,GAAA,CAACA,EAAS,GACN,MAAA,IAAI,MAAM,8CAA8C,EAEhE,OAAOA,EAAS,MAAK,CACtB,EACA,KAAaC,GAAA,CAEZ,KAAK,QAAQ,UAAYA,CAAA,CAC1B,EACA,MAAeC,GAAA,CACN,QAAA,MAAM,gDAAiDA,CAAK,CAAA,CACrE,CACL,CACF,CAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAC3B,SAAS,iBAAiB,MAAM,EACxC,QAAyBC,GAAA,CACtC,IAAIN,EAAaM,CAAa,CAAA,CAC/B,CACH,CAAC"}
=======
{"version":3,"file":"MediaConsent.js","sources":["../../Private/Build/MediaConsentPlugin/src/ts/mediaConsent.ts"],"sourcesContent":["// media-consent module\nexport class MediaConsent {\n  private readonly wrapper: HTMLElement | null;\n  private readonly uri: string | null; // Declare the uri property with the correct type\n  private readonly type: string | null; // Declare the uri property with the correct type\n\n  constructor (element: Element) {\n    this.wrapper = element.closest('.mediaconsent_wrapper') as HTMLElement | null;\n    if (!this.wrapper) {\n      throw new Error('Parent wrapper with class \"mediaconsent-wrapper\" not found.');\n    } else {\n      // @ts-ignore\n      this.uri = this.wrapper.dataset.mcuri;\n      // @ts-ignore\n      this.type = this.wrapper.dataset.mctype;\n    }\n    this.wrapper.addEventListener('click', this.clickHandler.bind(this));\n  }\n\n  clickHandler = () => {\n    if (!this.uri) {\n      console.error('Error: data-mcuri attribute not found in parent wrapper.');\n      return;\n    }\n    if (!this.type) {\n      console.warn('Warning: \"type\" parameter not found in data-mcuri attribute.');\n      return;\n    }\n    this.reloadItem();\n  };\n\n  reloadItem() {\n    // @ts-ignore\n    fetch(this.uri)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('MediaConsent: Failed to load consent content');\n        }\n        return response.text();\n      })\n      .then(text => {\n        // @ts-ignore\n        this.wrapper.innerHTML = text;\n      })\n      .catch(error => {\n        console.error('There is a problem with the fetch operation: ', error);\n      });\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const mediaCheckBoxs = document.querySelectorAll('[name=\"mcb\"]');\n  mediaCheckBoxs.forEach(mediaCheckBox => {\n    new MediaConsent(mediaCheckBox);\n  });\n});\n"],"names":["MediaConsent","element","__publicField","response","text","error","mediaCheckBox"],"mappings":"wKACO,MAAMA,CAAa,CAKxB,YAAaC,EAAkB,CAJdC,EAAA,gBACAA,EAAA,YACAA,EAAA,aAejBA,EAAA,oBAAe,IAAM,CACf,GAAA,CAAC,KAAK,IAAK,CACb,QAAQ,MAAM,0DAA0D,EACxE,MACF,CACI,GAAA,CAAC,KAAK,KAAM,CACd,QAAQ,KAAK,8DAA8D,EAC3E,MACF,CACA,KAAK,WAAW,CAAA,GApBZ,GADC,KAAA,QAAUD,EAAQ,QAAQ,uBAAuB,EACjD,KAAK,QAIH,KAAA,IAAM,KAAK,QAAQ,QAAQ,MAE3B,KAAA,KAAO,KAAK,QAAQ,QAAQ,WAL3B,OAAA,IAAI,MAAM,6DAA6D,EAO/E,KAAK,QAAQ,iBAAiB,QAAS,KAAK,aAAa,KAAK,IAAI,CAAC,CACrE,CAcA,YAAa,CAEX,MAAM,KAAK,GAAG,EACX,KAAiBE,GAAA,CACZ,GAAA,CAACA,EAAS,GACN,MAAA,IAAI,MAAM,8CAA8C,EAEhE,OAAOA,EAAS,MAAK,CACtB,EACA,KAAaC,GAAA,CAEZ,KAAK,QAAQ,UAAYA,CAAA,CAC1B,EACA,MAAeC,GAAA,CACN,QAAA,MAAM,gDAAiDA,CAAK,CAAA,CACrE,CACL,CACF,CAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAC3B,SAAS,iBAAiB,cAAc,EAChD,QAAyBC,GAAA,CACtC,IAAIN,EAAaM,CAAa,CAAA,CAC/B,CACH,CAAC"}
>>>>>>> 90d52fa (Build files updated)
